#sweep function
var1 = 1
var2 = 2
var3 = 3
var1, var2, var3 = var3, var2, var1
print(var1, var2, var3)

bilangan= [100, 20, 60, 90, 40, 30, 10 ]
def bubbleshort(bilangan):
  lastElementIndex = len(bilangan)-1
  for PassNo in range(LastElementIndex,0,-1):
    for idx in range(PassNo):
      if bilangan[idx]>bilangan[idx+1]:
        bilangan[idx],bilangan[idx+1]=bilangan[idx+1],bilangan[idx]
        return bilangan


#latihan insert short adrianus
def insertion_sort(arr):
 

  for i in range(1, len(arr)):
    key = arr[i]
    j = i - 1
    while j >= 0 and key < arr[j]:
      arr[j + 1] = arr[j]
      j -= 1
    arr[j + 1] = key
  return arr

# Contoh penggunaan   

bilangan = [89, 12, 57, 16, 25, 11, 75]
hasil = insertion_sort(bilangan)
print("Bilangan setelah diurutkan:", hasil)


#latihan selection short adrianus
def selection_sort(arr):
  n = len(arr)
  for i in range(n):
    min_idx = i
    for j in range(i+1, n):
      if arr[j] < arr[min_idx]:
        min_idx = j
    arr[i], arr[min_idx] = arr[min_idx], arr[i]
  return arr


bilangan = [89, 12, 57, 16, 25, 11, 75]
hasil = selection_sort(bilangan)
print(hasil)


#latihan liner search adrianus
def linear_search(list, x):
  for i in range(len(list)):
    if list[i] == x:
      return i
  return -1

huruf = ['y', 'u', 'i', 'w', 'o', 'a', 'q', 'u', 'j', 'p']
cari = 'a'
hasil = linear_search(huruf, cari)

if hasil != -1:
  print("Huruf", cari, "ditemukan pada indeks", hasil)
else:
  print("Huruf", cari, "tidak ditemukan")


def binary_search(arr, x):
  low = 0
  high = len(arr) - 1
  mid = 0

  while low <= high:
    mid = (high + low) // 2
    if arr[mid] < x:
      low = mid + 1
    elif arr[mid] > x:
      high = mid - 1
    else:
      return mid
  return -1

huruf = ['a', 'i', 'j', 'o', 'p', 'q', 'u', 'w', 'y']
cari = 'a'
hasil = binary_search(huruf, cari)

if hasil != -1:
  print("Huruf", cari, "ditemukan pada indeks", hasil)
else:
  print("Huruf", cari, "tidak ditemukan")




def interpolation_search(arr, lo, hi, x):
  if lo <= hi and arr[lo] <= x and arr[hi] >= x:
    pos = lo + int(((float(hi - lo) / (arr[hi] - arr[lo])) * (x - arr[lo])))

    if arr[pos] == x:
      return pos

    if arr[pos] < x:
      return interpolation_search(arr, pos + 1, hi, x)

    if arr[pos] > x:
      return interpolation_search(arr, lo,   
 pos - 1, x)

  else:
    return -1

# Deret huruf (harus terurut)
huruf = ['a', 'i', 'j', 'o', 'p', 'q', 'u', 'w', 'y']

# Elemen yang dicari
cari = 'a'

# Panggil fungsi interpolation_search
hasil = interpolation_search(huruf, 0, len(huruf)-1, cari)

if hasil != -1:
  print("Huruf", cari, "ditemukan pada indeks", hasil)
else:
  print("Huruf", cari, "tidak ditemukan")
